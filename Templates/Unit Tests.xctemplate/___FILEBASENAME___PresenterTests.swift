//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates, edited by
//  Behdad Keynejad for Snapp, so you can apply clean architecture to your
//  iOS and Mac projects, see http://clean-swift.com 
//

import XCTest
@testable import ___PROJECTNAMEASIDENTIFIER___

class ___VARIABLE_sceneName___PresenterTests: XCTestCase {
    // MARK: - Properties
    var testPresenter: ___VARIABLE_sceneName___Presenter!
    
    // MARK: - Methods
    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()
        setup___VARIABLE_sceneName___Presenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    func setup___VARIABLE_sceneName___Presenter() {
        testPresenter = ___VARIABLE_sceneName___Presenter()
    }
    
    // MARK: Mocks
    class ___VARIABLE_sceneName___ViewControllerMock: ___VARIABLE_sceneName___ViewControllerProtocol {
        var displayCalled = false
        
        func display(viewModel: ___VARIABLE_sceneName___.Something.ViewModel) {
            displayCalled = true
        }
    }
    
    // MARK: - Tests
    func testPresentSomething() {
        // Given
        let mockViewController = ___VARIABLE_sceneName___ViewControllerMock()
        testPresenter.viewController = mockViewController
        let businessModel = ___VARIABLE_sceneName___.Something.BusinessModel()
        
        // When
        testPresenter.present(businessModel: ___VARIABLE_sceneName___.Something.BusinessModel)
        
        // Then
        XCTAssertTrue(mockViewController.displayCalled, "presentSomething(response:) should ask the view controller to display the result")
    }
}

//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates, edited by
//  Behdad Keynejad for Snapp, so you can apply clean architecture to your
//  iOS and Mac projects, see http://clean-swift.com
//

import XCTest
import SNPUtilities
@testable import ___PROJECTNAMEASIDENTIFIER___
import SwiftyMocky

class ___VARIABLE_sceneName___InteractorTests: XCTestCase {
    // MARK: - Properties
    var interactor: ___VARIABLE_sceneName___Interactor!
    
    // MARK: - Methods
    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()
        interactor = ___VARIABLE_sceneName___Interactor()
    }
    
    override func tearDown() {
        super.tearDown()
        interactor = nil
    }
    
    // MARK: - Tests
    func testDoSomething() {
        // Given
        // Tip: here we inject "routerMock", "presenterMock" into "interactor"
        let routerMock = ___VARIABLE_sceneName___RouterProtocolMock()
        interactor.router = routerMock
        let presenterMock = ___VARIABLE_sceneName___PresenterProtocolMock()
        interactor.presenter = presenterMock
        
        // When
        //Calling method manually
        interactor.viewDidLoad()
        
        // Then
        // Tip: for Verify, you should drop ".any" for parameter function.
        Verify(routerMock, .//desired method => navigateToSafari(url: .any))
        Verify(presenterMock, .//desired method => present(viewModel: .any))
    }
}
